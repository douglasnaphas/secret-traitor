# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateGameInput {
  gameClass: GameClass!
  playerCode: String!
}

"""The current state of a game"""
type Game {
  class: GameClass!
  code: String!
  host: Player!
  id: ID!
  players: [Player!]
  status: GameStatus!
}

"""
The classification of a game. This property is used to determine other more specific properties of a specific game.
"""
enum GameClass {
  AlliesNEnemies
}

"""
The current status of a game. Designates whether a game is complete, joinable, or playable.
"""
enum GameStatus {
  Archived
  Closed
  InLobby
  InProgress
}

""""""
type GameType {
  description: String!
  displayName: String!
  gameClass: GameClass!
}

type Mutation {
  createGame(input: CreateGameInput!): Game
  deleteGame(id: String!): Boolean!
}

"""Player details"""
type Player {
  code: String!
  nickname: String
}

type Query {
  allGames: [Game!]!
  game(code: String!): Game
  gameTypes: [GameType!]!
}
