version: '3'

services:
    backend:
        build: ./backend
        environment:
            - AWS_DEFAULT_REGION=us-east-1
            - AWS_ACCESS_KEY_ID=not-specified-not-needed
            - AWS_SECRET_ACCESS_KEY=not-specified-not-needed
        depends_on:
            - db-setup
    dynamodb-local:
        command:
            [
                '-jar',
                'DynamoDBLocal.jar',
                '-sharedDb',
                '-dbPath',
                '/home/dynamodblocal/data',
            ]
        container_name: dynamodb-local
        image: amazon/dynamodb-local
        ports:
            - '8000:8000'
        hostname: dynamodb-local
        volumes:
            - ./dynamo:/home/dynamodblocal/data
    frontend:
        build: ./frontend
        ports:
            - '7328:3000'
        stdin_open: true
    web:
        image: nginx
        ports:
            - '7327:80'
        # volumes:
        #   - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
        command: [nginx-debug, '-g', 'daemon off;']
        environment:
            - NGINX_HOST=foobar.com
            - NGINX_PORT=80
    db-setup:
        image: amazon/aws-cli
        environment:
            - AWS_DEFAULT_REGION=us-east-1
            - AWS_ACCESS_KEY_ID=not-specified-not-needed
            - AWS_SECRET_ACCESS_KEY=not-specified-not-needed
        volumes:
            - ./wait-for-it:/scripts
        entrypoint: bash
        command:
            [
                '/scripts/wait-for-it.sh',
                'dynamodb-local:8000',
                '--',
                'aws',
                'dynamodb',
                'list-tables',
                '--endpoint-url',
                'http://dynamodb-local:8000',
            ]
        depends_on:
            - dynamodb-local
    am:
        image: amazon/aws-cli
        entrypoint: tail
        command: tail -F /dev/null
